"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tab = void 0;
const path_1 = __importDefault(require("path"));
const express_1 = __importDefault(require("express"));
const express_ws_1 = __importDefault(require("express-ws"));
const Tab_1 = __importDefault(require("./Tab"));
exports.Tab = Tab_1.default;
class Logger {
    constructor(port = 9000) {
        this.port = port;
        this.app = (0, express_1.default)();
        this.tabs = [];
        this.server = null;
        this.registerRoutes();
    }
    registerRoutes() {
        this.ws = (0, express_ws_1.default)(this.app);
        this.app.get('/rest/tabs', (_req, res) => res.json(this.tabs));
        this.app.use('/xterm/addons/fit', express_1.default.static(path_1.default.dirname(require.resolve('xterm-addon-fit'))));
        this.app.use('/xterm/addons/search', express_1.default.static(path_1.default.dirname(require.resolve('xterm-addon-search'))));
        this.app.use('/xterm', express_1.default.static(path_1.default.resolve(require.resolve('xterm'), '../..')));
        this.app.use(express_1.default.static(path_1.default.resolve(__dirname, '..', 'static')));
        this.ws.app.ws('/sub', () => {
            // I assume this endpoint is just a no-op needed for some reason.
        });
    }
    /**
     * Creates a new tab with the given name, the name should be human readable
     * it will be used as the tab title in the front end.
     */
    createTab(name) {
        const tab = new Tab_1.default(name, this.ws);
        this.tabs.push(tab);
        return tab;
    }
    /**
     * Start the HTTP server hosting the web UI.
     *
     * @returns the port number
     */
    start() {
        return new Promise((resolve) => {
            this.server = this.app.listen(this.port, () => resolve(this.port));
        });
    }
    /**
     * Stop the HTTP server hosting the web UI
     */
    stop() {
        if (this.server)
            this.server.close();
    }
}
exports.default = Logger;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0xvZ2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxnREFBd0I7QUFFeEIsc0RBQThCO0FBQzlCLDREQUE2QjtBQUU3QixnREFBd0I7QUFFZixjQUZGLGFBQUcsQ0FFRTtBQUVaLE1BQXFCLE1BQU07SUFTekIsWUFBb0IsT0FBTyxJQUFJO1FBQVgsU0FBSSxHQUFKLElBQUksQ0FBTztRQVJ2QixRQUFHLEdBQUcsSUFBQSxpQkFBTyxHQUFFLENBQUM7UUFJaEIsU0FBSSxHQUFVLEVBQUUsQ0FBQztRQUVqQixXQUFNLEdBQXVCLElBQUksQ0FBQztRQUd4QyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVPLGNBQWM7UUFDcEIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFBLG9CQUFHLEVBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsaUJBQU8sQ0FBQyxNQUFNLENBQUMsY0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsc0JBQXNCLEVBQUUsaUJBQU8sQ0FBQyxNQUFNLENBQUMsY0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDMUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLGlCQUFPLENBQUMsTUFBTSxDQUFDLGNBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEYsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsaUJBQU8sQ0FBQyxNQUFNLENBQUMsY0FBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0RSxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRTtZQUMxQixpRUFBaUU7UUFDbkUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsU0FBUyxDQUFDLElBQVk7UUFDcEIsTUFBTSxHQUFHLEdBQUcsSUFBSSxhQUFHLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNwQixPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsS0FBSztRQUNILE9BQU8sSUFBSSxPQUFPLENBQVMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNyQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3JFLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOztPQUVHO0lBQ0gsSUFBSTtRQUNGLElBQUksSUFBSSxDQUFDLE1BQU07WUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3ZDLENBQUM7Q0FDRjtBQXJERCx5QkFxREMifQ==